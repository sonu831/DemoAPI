// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SampleWebAPI.Data;

#nullable disable

namespace SampleWebAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SampleWebAPI.Models.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CourseCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CourseName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Credits")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CourseCode")
                        .IsUnique();

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CourseCode = "CS101",
                            CourseName = "Computer Science",
                            Credits = 3
                        },
                        new
                        {
                            Id = 2,
                            CourseCode = "MATH101",
                            CourseName = "Mathematics",
                            Credits = 4
                        },
                        new
                        {
                            Id = 3,
                            CourseCode = "PHY101",
                            CourseName = "Physics",
                            Credits = 3
                        });
                });

            modelBuilder.Entity("SampleWebAPI.Models.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DepartmentCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("HeadOfDepartment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DepartmentCode = "CS",
                            DepartmentName = "Computer Science",
                            HeadOfDepartment = "Dr. Smith",
                            Location = "Building A"
                        },
                        new
                        {
                            Id = 2,
                            DepartmentCode = "MATH",
                            DepartmentName = "Mathematics",
                            HeadOfDepartment = "Dr. Johnson",
                            Location = "Building B"
                        },
                        new
                        {
                            Id = 3,
                            DepartmentCode = "PHY",
                            DepartmentName = "Physics",
                            HeadOfDepartment = "Dr. Williams",
                            Location = "Building C"
                        },
                        new
                        {
                            Id = 4,
                            DepartmentCode = "ENG",
                            DepartmentName = "Engineering",
                            HeadOfDepartment = "Dr. Brown",
                            Location = "Building D"
                        });
                });

            modelBuilder.Entity("SampleWebAPI.Models.Enrollment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EnrollmentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Grade")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("StudentId");

                    b.ToTable("Enrollments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CourseId = 1,
                            EnrollmentDate = new DateTime(2024, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Grade = "A",
                            Status = "Active",
                            StudentId = 1
                        },
                        new
                        {
                            Id = 2,
                            CourseId = 2,
                            EnrollmentDate = new DateTime(2024, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Grade = "B+",
                            Status = "Active",
                            StudentId = 1
                        },
                        new
                        {
                            Id = 3,
                            CourseId = 1,
                            EnrollmentDate = new DateTime(2024, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Grade = "A-",
                            Status = "Active",
                            StudentId = 2
                        },
                        new
                        {
                            Id = 4,
                            CourseId = 3,
                            EnrollmentDate = new DateTime(2024, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Grade = "B",
                            Status = "Active",
                            StudentId = 2
                        },
                        new
                        {
                            Id = 5,
                            CourseId = 2,
                            EnrollmentDate = new DateTime(2023, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Grade = "A",
                            Status = "Completed",
                            StudentId = 3
                        },
                        new
                        {
                            Id = 6,
                            CourseId = 3,
                            EnrollmentDate = new DateTime(2024, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Active",
                            StudentId = 3
                        },
                        new
                        {
                            Id = 7,
                            CourseId = 1,
                            EnrollmentDate = new DateTime(2024, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Active",
                            StudentId = 4
                        },
                        new
                        {
                            Id = 8,
                            CourseId = 2,
                            EnrollmentDate = new DateTime(2024, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Active",
                            StudentId = 4
                        });
                });

            modelBuilder.Entity("SampleWebAPI.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("EnrollmentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "123 Main St, City, State",
                            DateOfBirth = new DateTime(2000, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "john.doe@university.com",
                            EnrollmentDate = new DateTime(2024, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "John",
                            LastName = "Doe",
                            PhoneNumber = "555-0101"
                        },
                        new
                        {
                            Id = 2,
                            Address = "456 Oak Ave, City, State",
                            DateOfBirth = new DateTime(2001, 3, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "jane.smith@university.com",
                            EnrollmentDate = new DateTime(2024, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Jane",
                            LastName = "Smith",
                            PhoneNumber = "555-0102"
                        },
                        new
                        {
                            Id = 3,
                            Address = "789 Pine Rd, City, State",
                            DateOfBirth = new DateTime(1999, 11, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "mike.johnson@university.com",
                            EnrollmentDate = new DateTime(2023, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Mike",
                            LastName = "Johnson",
                            PhoneNumber = "555-0103"
                        },
                        new
                        {
                            Id = 4,
                            Address = "321 Elm St, City, State",
                            DateOfBirth = new DateTime(2002, 7, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "emily.davis@university.com",
                            EnrollmentDate = new DateTime(2024, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Emily",
                            LastName = "Davis",
                            PhoneNumber = "555-0104"
                        });
                });

            modelBuilder.Entity("SampleWebAPI.Models.Enrollment", b =>
                {
                    b.HasOne("SampleWebAPI.Models.Course", "Course")
                        .WithMany("Enrollments")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SampleWebAPI.Models.Student", "Student")
                        .WithMany("Enrollments")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("SampleWebAPI.Models.Course", b =>
                {
                    b.Navigation("Enrollments");
                });

            modelBuilder.Entity("SampleWebAPI.Models.Student", b =>
                {
                    b.Navigation("Enrollments");
                });
#pragma warning restore 612, 618
        }
    }
}
